{"ast":null,"code":"var _jsxFileName = \"/home/xim/Documents/Master/twitter-app/front-end/src/Components/MultipleStepForm/Names.js\";\nimport React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useForm, ErrorMessage } from \"react-hook-form\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStateMachine } from \"little-state-machine\";\nimport updateAction from \"./updateAction\";\nimport './Forms.css';\n\nconst Names = ({\n  setStep\n}) => {\n  //const { firstName, lastName, nickName } = formData;\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    action,\n    state\n  } = useStateMachine(updateAction);\n\n  const onSubmit = data => {\n    action(data);\n    setStep('Password');\n  };\n\n  const useStyles = makeStyles(theme => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  }));\n  const classes = useStyles();\n  console.log(state.data);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"First Name\",\n    inputRef: register,\n    name: \"FirstName\",\n    defaultValue: state.data.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"E-mail\",\n    name: \"email\",\n    defaultValue: state.data.email,\n    inputRef: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }\n  }, errors.email.message), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Birthday\",\n    name: \"birtDate\",\n    type: \"date\",\n    defaultValue: state.data.birthDate,\n    inputRef: register,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n};\n\nexport default Names;","map":{"version":3,"sources":["/home/xim/Documents/Master/twitter-app/front-end/src/Components/MultipleStepForm/Names.js"],"names":["React","TextField","Button","useForm","ErrorMessage","makeStyles","useStateMachine","updateAction","Names","setStep","register","handleSubmit","errors","action","state","onSubmit","data","useStyles","theme","textField","marginLeft","spacing","marginRight","width","classes","console","log","firstName","email","required","pattern","value","message","birthDate","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useForm, ErrorMessage } from \"react-hook-form\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStateMachine } from \"little-state-machine\";\nimport updateAction from \"./updateAction\";\nimport './Forms.css'\n\nconst Names = ({ setStep }) => {\n  //const { firstName, lastName, nickName } = formData;\n  const { register, handleSubmit, errors } = useForm();\n  const { action, state } = useStateMachine(updateAction);\n\n  const onSubmit = data => {\n    action(data)\n    setStep('Password')\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n  }));\n\n  const classes = useStyles();\n  console.log(state.data)\n\n  return (\n    <form onSubmit = {handleSubmit(onSubmit)}>\n      <TextField\n       label=\"First Name\"\n       inputRef={register}  \n       name=\"FirstName\"\n       defaultValue={state.data.firstName}\n       />\n      <TextField \n        label=\"E-mail\" \n        name=\"email\" \n        defaultValue={state.data.email} \n        inputRef={register({\n          required: \"Required\",\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n            message: \"invalid email address\"\n          }\n        })} \n      />\n      {errors.email && <p>{errors.email.message}</p>}\n      <TextField\n        label=\"Birthday\"\n        name=\"birtDate\" \n        type=\"date\"\n        defaultValue={state.data.birthDate}\n        inputRef={register}  \n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <div>\n        <Button disabled>Previous</Button>\n        <Button type=\"submit\">Next</Button>\n      </div>\n    </form>\n  );\n};\n\nexport default Names;\n"]},"metadata":{},"sourceType":"module"}